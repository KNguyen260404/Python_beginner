def calculate_bmi(weight, height):
    """T√≠nh ch·ªâ s·ªë BMI"""
    return weight / (height ** 2)

def get_bmi_category(bmi):
    """Ph√¢n lo·∫°i BMI theo ti√™u chu·∫©n WHO"""
    if bmi < 18.5:
        return "Thi·∫øu c√¢n", "üîµ"
    elif 18.5 <= bmi < 25:
        return "B√¨nh th∆∞·ªùng", "üü¢"
    elif 25 <= bmi < 30:
        return "Th·ª´a c√¢n", "üü°"
    elif 30 <= bmi < 35:
        return "B√©o ph√¨ ƒë·ªô I", "üü†"
    elif 35 <= bmi < 40:
        return "B√©o ph√¨ ƒë·ªô II", "üî¥"
    else:
        return "B√©o ph√¨ ƒë·ªô III", "üî¥"

def get_health_advice(category):
    """ƒê∆∞a ra l·ªùi khuy√™n s·ª©c kh·ªèe"""
    advice = {
        "Thi·∫øu c√¢n": [
            "üí° TƒÉng c∆∞·ªùng dinh d∆∞·ª°ng v·ªõi th·ª±c ph·∫©m gi√†u protein",
            "üèãÔ∏è T·∫≠p luy·ªán ƒë·ªÉ tƒÉng kh·ªëi l∆∞·ª£ng c∆°",
            "üë®‚Äç‚öïÔ∏è Tham kh·∫£o √Ω ki·∫øn b√°c sƒ© dinh d∆∞·ª°ng"
        ],
        "B√¨nh th∆∞·ªùng": [
            "‚úÖ Duy tr√¨ l·ªëi s·ªëng hi·ªán t·∫°i",
            "ü•ó Ti·∫øp t·ª•c ch·∫ø ƒë·ªô ƒÉn c√¢n b·∫±ng",
            "üèÉ Duy tr√¨ ho·∫°t ƒë·ªông th·ªÉ ch·∫•t ƒë·ªÅu ƒë·∫∑n"
        ],
        "Th·ª´a c√¢n": [
            "ü•ó Gi·∫£m l∆∞·ª£ng calo n·∫°p v√†o",
            "üèÉ TƒÉng c∆∞·ªùng ho·∫°t ƒë·ªông th·ªÉ ch·∫•t",
            "‚öñÔ∏è Theo d√µi c√¢n n·∫∑ng th∆∞·ªùng xuy√™n"
        ],
        "B√©o ph√¨ ƒë·ªô I": [
            "üìâ C·∫ßn gi·∫£m c√¢n nghi√™m t√∫c",
            "üë®‚Äç‚öïÔ∏è Tham kh·∫£o chuy√™n gia dinh d∆∞·ª°ng",
            "üèãÔ∏è K·∫øt h·ª£p ch·∫ø ƒë·ªô ƒÉn v√† t·∫≠p luy·ªán"
        ],
        "B√©o ph√¨ ƒë·ªô II": [
            "‚ö†Ô∏è C·∫ßn can thi·ªáp y t·∫ø",
            "üë®‚Äç‚öïÔ∏è Kh√°m b√°c sƒ© chuy√™n khoa",
            "üìã C√≥ th·ªÉ c·∫ßn ch·∫ø ƒë·ªô ƒëi·ªÅu tr·ªã ƒë·∫∑c bi·ªát"
        ],
        "B√©o ph√¨ ƒë·ªô III": [
            "üö® C·∫ßn can thi·ªáp y t·∫ø kh·∫©n c·∫•p",
            "üè• Li√™n h·ªá b√°c sƒ© ngay l·∫≠p t·ª©c",
            "‚öïÔ∏è C√≥ th·ªÉ c·∫ßn ph·∫´u thu·∫≠t gi·∫£m b√©o"
        ]
    }
    return advice.get(category, [])

def bmi_calculator():
    print("=== T√çNH CH·ªà S·ªê BMI ===")
    print("BMI (Body Mass Index) - Ch·ªâ s·ªë kh·ªëi c∆° th·ªÉ")
    
    while True:
        try:
            print("\n--- Nh·∫≠p th√¥ng tin ---")
            weight = float(input("C√¢n n·∫∑ng (kg): "))
            height = float(input("Chi·ªÅu cao (m): "))
            
            if weight <= 0 or height <= 0:
                print("‚ùå C√¢n n·∫∑ng v√† chi·ªÅu cao ph·∫£i l·ªõn h∆°n 0!")
                continue
            
            if height > 3:
                print("‚ö†Ô∏è B·∫°n c√≥ nh·∫≠p chi·ªÅu cao b·∫±ng cm? Vui l√≤ng nh·∫≠p b·∫±ng m√©t (vd: 1.70)")
                continue
            
            # T√≠nh BMI
            bmi = calculate_bmi(weight, height)
            category, emoji = get_bmi_category(bmi)
            
            # Hi·ªÉn th·ªã k·∫øt qu·∫£
            print(f"\n=== K·∫æT QU·∫¢ ===")
            print(f"üìè Chi·ªÅu cao: {height}m")
            print(f"‚öñÔ∏è C√¢n n·∫∑ng: {weight}kg")
            print(f"üìä BMI: {bmi:.1f}")
            print(f"{emoji} Ph√¢n lo·∫°i: {category}")
            
            # Hi·ªÉn th·ªã b·∫£ng tham kh·∫£o
            print(f"\nüìã B·∫¢NG THAM KH·∫¢O BMI:")
            print("üîµ Thi·∫øu c√¢n: < 18.5")
            print("üü¢ B√¨nh th∆∞·ªùng: 18.5 - 24.9")
            print("üü° Th·ª´a c√¢n: 25.0 - 29.9")
            print("üü† B√©o ph√¨ ƒë·ªô I: 30.0 - 34.9")
            print("üî¥ B√©o ph√¨ ƒë·ªô II: 35.0 - 39.9")
            print("üî¥ B√©o ph√¨ ƒë·ªô III: ‚â• 40.0")
            
            # L·ªùi khuy√™n s·ª©c kh·ªèe
            advice_list = get_health_advice(category)
            if advice_list:
                print(f"\nüí° L·ªúI KHUY√äN:")
                for advice in advice_list:
                    print(f"   {advice}")
            
            # T√≠nh c√¢n n·∫∑ng l√Ω t∆∞·ªüng
            ideal_weight_min = 18.5 * (height ** 2)
            ideal_weight_max = 24.9 * (height ** 2)
            print(f"\nüéØ C√¢n n·∫∑ng l√Ω t∆∞·ªüng cho b·∫°n: {ideal_weight_min:.1f} - {ideal_weight_max:.1f} kg")
            
            # H·ªèi c√≥ mu·ªën t√≠nh ti·∫øp
            continue_calc = input("\nB·∫°n c√≥ mu·ªën t√≠nh cho ng∆∞·ªùi kh√°c kh√¥ng? (y/n): ")
            if continue_calc.lower() != 'y':
                break
                
        except ValueError:
            print("‚ùå Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá!")
        except Exception as e:
            print(f"‚ùå C√≥ l·ªói x·∫£y ra: {e}")
    
    print("C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng m√°y t√≠nh BMI! üôè")

if __name__ == "__main__":
    bmi_calculator()
